/*
 * This file is generated by jOOQ.
 */
package com.backend.template.dbschema.jooqGenerated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private UUID publicId;
    private LocalDateTime created;
    private String email;
    private String passwordhash;
    private String name;
    private String role;

    public Users() {}

    public Users(Users value) {
        this.id = value.id;
        this.publicId = value.publicId;
        this.created = value.created;
        this.email = value.email;
        this.passwordhash = value.passwordhash;
        this.name = value.name;
        this.role = value.role;
    }

    public Users(
        Integer id,
        UUID publicId,
        LocalDateTime created,
        String email,
        String passwordhash,
        String name,
        String role
    ) {
        this.id = id;
        this.publicId = publicId;
        this.created = created;
        this.email = email;
        this.passwordhash = passwordhash;
        this.name = name;
        this.role = role;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.users.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.users.public_id</code>.
     */
    public UUID getPublicId() {
        return this.publicId;
    }

    /**
     * Setter for <code>public.users.public_id</code>.
     */
    public void setPublicId(UUID publicId) {
        this.publicId = publicId;
    }

    /**
     * Getter for <code>public.users.created</code>.
     */
    public LocalDateTime getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.users.created</code>.
     */
    public void setCreated(LocalDateTime created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>public.users.passwordHash</code>.
     */
    public String getPasswordhash() {
        return this.passwordhash;
    }

    /**
     * Setter for <code>public.users.passwordHash</code>.
     */
    public void setPasswordhash(String passwordhash) {
        this.passwordhash = passwordhash;
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.users.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.users.role</code>.
     */
    public String getRole() {
        return this.role;
    }

    /**
     * Setter for <code>public.users.role</code>.
     */
    public void setRole(String role) {
        this.role = role;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.publicId == null) {
            if (other.publicId != null)
                return false;
        }
        else if (!this.publicId.equals(other.publicId))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.passwordhash == null) {
            if (other.passwordhash != null)
                return false;
        }
        else if (!this.passwordhash.equals(other.passwordhash))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.publicId == null) ? 0 : this.publicId.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.passwordhash == null) ? 0 : this.passwordhash.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(publicId);
        sb.append(", ").append(created);
        sb.append(", ").append(email);
        sb.append(", ").append(passwordhash);
        sb.append(", ").append(name);
        sb.append(", ").append(role);

        sb.append(")");
        return sb.toString();
    }
}
